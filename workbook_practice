12번 문제 — 맞는지 확인
학번 A112113인 김고운 학생 연도별 평점
점수는 반올림하여 소수점 한자리

SELECT SUBSTR(TERM_NO,1,4) AS “년도”, ROUND(AVG(*),1) AS “년도 별 평점”
FROM TB_GRADE
WHERE STUDENT_NO = ‘A112113’
GROUP BY SUBSTR(TERM_NO,1,4)


13번 문제
학과 별 휴학생 수 파악
학과 번호(코드)와 휴학생 수

SELECT DEPARTMENT_NO AS 학과코드명, COUNT(*) AS “휴학생 수”
FROM TB_STUDENT
WHERE ABSENCE_YN = ‘Y’
GROUP BY DEPARTMENT_NO


14번 문제
동명이인 학생들의 이름
동일이름과 동명인 수

SELECT STUDENT_NAME AS “동일이름”, COUNT(*) AS “동명인 수”
FROM TB_STUDENT
GROUP BY STUDENT_NAME

15번 문제 - 두개의 그룹화 결과 확인해보기
학기 A112113 김고운 학생
년도, 학기 별 평점, 년도 별 누적 평점, 총 평점
평점은 소수점 1자리까지만 반올림하여 표시.

SELECT SUBSTR(TERM_NO,1,4) AS “년도”, SUBSTR(TERM_NO,5,2)  AS “학기”, ROUND(AVG(*),1) AS “평점”
FROM TB_GRADE
WHERE STUDENT_NO = ‘A112113’
GROUP BY SUBSTR(TERM_NO,1,6), SUBSTR(TERM_NO,5,2)



ADDITIONAL SELECT - OPTIOIN

1번 문제
학생이름, 주소지
이름 오름차순 정렬

SELECT STUDENT_NAME AS “학생 이름”, STUDENT_ADDRESS AS “주소지”
FROM TB_STUDENT
ORDER BY 1

2번 문제 - 나이 잘 했는지 확인 필요
휴학중인 학생들
이름이랑 주민번호
나이가 적은 순서로 화면에 출력


SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = ‘Y’
ORDER BY MONTHS_BETWEEN(SYSDATE,TO_DATE(SUBSTR(STUDENT_SSN,1,6),’RRMMDD’)) DESC


3번 문제
주소지가 강원도나 경기도인 학생들 중
1900년대 학번을 가진 학생들 이름, 학번, 주소
이름의 오름차순

SELECT STUDENT_NAME AS “학생이름”, STUDENT_NO AS “학번”, STUDENT_ADDRESS AS “거주지 주소”
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO,1,1) != ‘A’
ORDER BY 1


4번 문제
현재 법학과 교수 이름
나이가 많은 사람부터


SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = (SELECT DEPARMENT_NO
						FROM TB_DEPARTMENT
						WHERE DEPARTMENT_NAME = ‘법학과’)
ORDER BY MONTHS_BETWEEN(SYSDATE,TO_DATE(SUBSTR(PROFESSOR_ADDRESS,1,6),’RRMMDD’))


5번 문제
2004년 2학기에 C3118100 과목 수강한 학생들 학점
학점이 높은 사람부터
학점 같으면 학번이 낮은 학생부터


SELECT 
FROM 
WHERE 


6번 문제

학생 번호, 학생 이름, 학과 이름
학생 이름으로 오름차순 정렬

SELECT S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME
FROM TB_STUDENT S INNER JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
ORDER BY S.STUDENT_NAME



7번 문제
과목 이름, 과목의 학과이름

SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_CLASS C INNER JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO


8번 문제 - 확인 해볼 필요 있음(이너조인을 두번 썼음)
과목별 교수 이름
과목 이름, 교수 이름

SELECT CCP.CLASS_NAME, P.PROFESSOR_NAME
FROM (TB_CLASS C INNER JOIN TB_CLASS_PROFESSOR CP ON C.CLASS_NO = CP.CLASS_NO) CCP INNER JOIN TB_PROFESSOR P ON CCP.PROFESSOR_NO = P.PROFESSOR_NO



9번 문제 - 확인 필요 이너조인 세번 씀
8번 결과 중 인문사회 계열에 속한 과목의 교수 이름
과목 이름과 교수 이름

SELECT CCPP.CLASS_NAME, CCPP.PROFESSOR_NAME
FROM ((TB_CLASS C INNER JOIN TB_CLASS_PROFESSOR CP ON C.CLASS_NO = CP.CLASS_NO) CCP INNER JOIN TB_PROFESSOR P ON CCP.PROFESSOR_NO = P.PROFESSOR_NO) CCPP INNER JOIN TB_DEPARTMENT D ON CCPP.DEPARTMENT_NO = D.DEPARTMENT_NO


10번 문제 - 이너 조인 사용한 결과 확인해보기

음악학과 학생들 평점
학번, 학생 이름 ,전체 평점
평점은 소수점 1자리까지만

SELECT SD.STUDENT_NO AS 학번, SD.STUDENT_NAME AS “학생 이름”, AVG(*) AS “전체 평점”
FROM (TB_STUDENT S INNER JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO) SD INNER JOIN TB_GRADE G ON SD.STUDENT_NO = G.STUDENT_NO
WHERE SD.DEPARTMENT_NAME = ‘음악학과’
GROUP BY SD.STUDENT_NO



11번 문제  - 이너 조인의 결과 확인해보기
학번이 A313047인 학생이 학교에 안나오고 있다.
지도 교수에게 내용을 전달하기 위해
학과 이름, 학생 이름, 지도 교수 이름 필요


SELECT D.DEPARTMENT_NAME  AS 학과이름, SP.STUDENT_NAME AS 학생이름, SP.PROFESSOR_NAME AS 지도교수이름
FROM (TB_STUDENT S INNER JOIN TB_PROFESSOR P ON S.COADCH_PROFESSOR_NO = P.PROFESSOR_NO) SP INNER JOIN TB_DEPARTMENT D ON SP.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE SP.STUDENT_NO = ‘A313047’


12번 문제  - 다시 확인 필요
2007년도에 인간관계론 과목을 수강한 학생을 찾아
학생이름과 수강학기를 표시

SELECT GS.STUDENT_NAME AS 학생이름, GS.TERM_NO AS 수강학기
FROM (TB_GRADE G INNER JOIN TB_STUDENT S ON G.STUDENT_NO = D.STUDENT_NO) GS INNER JOIN TB_CLASS C ON GS.CLASS_NO = C.CLASS_NO
WHERE C.CLASS_NAME = ‘인간관계론’



13번 문제 — 예체능 계열 과목 정보는 어디에?
예체능 계열 과목 중 과목 담당교수를 한 명도 배정받지 못한 과목
과목 이름, 학과 이름


SELECT 
FROM 
WHERE 


14번 문제 — 확인 필요
서반아어학과 학생들이 지도교수를 게시하고자 한다.
학생 이름, 지도 교수 이름을 비교하여
만일 지도교수가 없는 학생일 경우 “지도교수 미지정” 으로 표시하라


SELECT S.STUDENT_NAME AS “학생 이름”, DECODE(S.COACH_PROFESSOR_NO,’Y’,S.COADCH_PROFESSOR_NO,’지도교수 미지정’) AS “지도교수”
FROM TB_DEPARTMENT D INNER JOIN TB_STUDENT_S ON D.DEPARTMENT_NO = S.DEPARTMENT_NO
WHERE D.DEPARTMENT_NAME = ‘서반아어학과’



15번 문제 - HAVING 결과 확인 필요
휴학생이 아닌 학생 중
평점이 4.0 이상인 학생
학번, 이름, 학과, 이름, 평점


SELECT SG.STUDENT_NO AS 학번, SG.STUDENT_NAME AS 이름, D.DEPARTMENT_NAME AS ‘학과 이름’, AVG(POINT) AS 평점
FROM (TB_STUDENT S INNER JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO) SG INNER JOIN TB_DEPARTMENT D ON SG.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE SG.ABSENCE_YN != ‘Y’
GROUP BY SG.STUDENT_NO
HAVING AVG(POINT) >= 4.0


16번 문제 — 몬가 정신없을 때 풀었는데, 과연

환경조경학과 전공과목들의 과목 별 평점

SELECT DC.CLASS_NO, DC.CLASS_NAME, AVG(POINT)
FROM (TB_DEPARTMENT D INNER JOIN TB_CLASS C ON D.DEPARTMENT_NO = C.DEPARTMENT_NO) DC INNER JOIN TB_GRADE G ON DC.CLASS_NO = G.CLASS_NO
WHERE DC.DEPARTMENT_NAME = ‘환경조경학과’
GROUP BY DC.CLASS_NO


17번 문제

최경희 학생과 같은 과 학생
이름, 주소

SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
						FROM TB_STUDENT
						WHERE STUDENT_NAME = ‘최경희’)


18번 문제 - 이거 맞는지 모르겠지만 일단 고
국어국문학과에서
총평점이 가장 높은 학생
이름, 학번


SELECT S.STUDENT_NO, S.STUDENT_NAME
FROM TB_STUDENT S INNER JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
WHERE  DEPARTMENT_NO = (SELECT DEPARTMENT_NO
						FROM TB_DEPARTMENT
						WHERE DEPARTMENT_NAME = ‘국어국문학과’)
GROUP BY STUDENT_NO
HAVING D.POINT = MAX(G.POINT)


19번 문제
환경조경학과가 속한 같은 계열 학과
학과 별 전공과목 평점 파악


SELECT DEPARTMENT_NAME AS “계열 학과명”, AS AVG(*) “전공평점”
FROM TB_DEPARTMENT
WHERE CATEGORY = (SELECT CATEGORY
					FROM TB_DEPARTMENT
					WHERE DEPARTMENT_NAME = ‘환경조경학과’)
GROUP BY DEPARTMENT_NO




DDL 

1번 문제

CREATE TABLE TB_CATEGORY(
NAME VARCHAR2(10),
USE_YN CHAR(1) DEFAULT ‘Y’);


2번 문제 — 기본키 설정 이거 맞나?
CREATE TABLE TB_CLASS_TYPE(
NO VARCHAR2(5),
NAME VARCHAR2(10)
CONSTRAINT TB_CLASS_TYPE_PK PRIMARY KEY(NO)
);


3번 문제 - 기본키 이름 생략가능한가??
ALTER TABLE CATEGORY
ADD CONSTRAINT CATEGORY_KEY PRIMARY KEY(NAME)

4번 문제

ALTER TABLE TB_CLASS_TYPE
MODIFY(NAME VARCHAR2(10) CONSTRAINT TB_CLASS_TYPE_NN NOT NULL)



#############################################################################################
위에는 내가 그냥 집에서 풀어본 것

아래는 제대로 배워서 푼 정답




--ADDITIONAL SELECT - OPTIOIN

--1번 문제
--학생이름, 주소지
--이름 오름차순 정렬

SELECT STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS AS "주소지"
FROM TB_STUDENT
ORDER BY 1

--2번 문제 - 나이 잘 했는지 확인 필요
--휴학중인 학생들
--이름이랑 주민번호
--나이가 적은 순서로 화면에 출력


SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY MONTHS_BETWEEN(SYSDATE,TO_DATE(SUBSTR(STUDENT_SSN,1,6),'RRMMDD')) DESC


--3번 문제
--주소지가 강원도나 경기도인 학생들 중
--1900년대 학번을 가진 학생들 이름, 학번, 주소
--이름의 오름차순

SELECT STUDENT_NAME AS "학생이름", STUDENT_NO AS "학번", STUDENT_ADDRESS AS "거주지 주소"
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO,1,1) != 'A' AND (STUDENT_ADDRESS LIKE '경기도%' OR STUDENT_ADDRESS LIKE '강원도%')
ORDER BY 1


--4번 문제
--현재 법학과 교수 이름
--나이가 많은 사람부터


SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
						FROM TB_DEPARTMENT
						WHERE DEPARTMENT_NAME = '법학과')
ORDER BY MONTHS_BETWEEN(SYSDATE,TO_DATE(SUBSTR(PROFESSOR_SSN,1,6),'RRMMDD'))


--5번 문제
--2004년 2학기에 C3118100 과목 수강한 학생들 학점
--학점이 높은 사람부터
--학점 같으면 학번이 낮은 학생부터



SELECT STUDENT_NO, POINT
FROM TB_GRADE
WHERE SUBSTR(TERM_NO,1,6) = '200402' AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO

--6번 문제

--학생 번호, 학생 이름, 학과 이름
--학생 이름으로 오름차순 정렬

SELECT S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME
FROM TB_STUDENT S 
INNER JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
ORDER BY S.STUDENT_NAME



--7번 문제
--과목 이름, 과목의 학과이름

SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_CLASS C 
INNER JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO

--8번 문제 - 확인 해볼 필요 있음(이너조인을 두번 썼음)
--과목별 교수 이름
--과목 이름, 교수 이름

SELECT C.CLASS_NAME, P.PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR CP
INNER JOIN TB_CLASS C ON CP.CLASS_NO = C.CLASS_NO
INNER JOIN TB_PROFESSOR P ON CP.PROFESSOR_NO = P.PROFESSOR_NO



--9번 문제 - 확인 필요 이너조인 세번 씀
--8번 결과 중 인문사회 계열에 속한 과목의 교수 이름
--과목 이름과 교수 이름

SELECT C.CLASS_NAME, P.PROFESSOR_NAME
FROM TB_CLASS C 
INNER JOIN TB_CLASS_PROFESSOR CP ON C.CLASS_NO = CP.CLASS_NO
INNER JOIN TB_PROFESSOR P ON CP.PROFESSOR_NO = P.PROFESSOR_NO
INNER JOIN TB_DEPARTMENT D ON P.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE D.CATEGORY = '인문사회'



--10번 문제 - 이너 조인 사용한 결과 확인해보기

--음악학과 학생들 평점
--학번, 학생 이름 ,전체 평점
--평점은 소수점 1자리까지만

SELECT S.STUDENT_NO AS 학번, S.STUDENT_NAME AS "학생 이름",TRUNC(AVG(G.POINT),1) AS "전체 평점"
FROM TB_STUDENT S 
INNER JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
INNER JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
WHERE D.DEPARTMENT_NAME = '음악학과'
GROUP BY S.STUDENT_NO, S.STUDENT_NAME



--11번 문제  - 이너 조인의 결과 확인해보기
--학번이 A313047인 학생이 학교에 안나오고 있다.
--지도 교수에게 내용을 전달하기 위해
--학과 이름, 학생 이름, 지도 교수 이름 필요

SELECT *
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NO = '008'



SELECT D.DEPARTMENT_NAME  AS 학과이름, S.STUDENT_NAME AS 학생이름, P.PROFESSOR_NAME AS 지도교수이름
FROM TB_STUDENT S 
INNER JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
INNER JOIN TB_PROFESSOR P ON S.COACH_PROFESSOR_NO = P.PROFESSOR_NO
WHERE S.STUDENT_NO = 'A313047'


--12번 문제  - 다시 확인 필요
--2007년도에 인간관계론 과목을 수강한 학생을 찾아
--학생이름과 수강학기를 표시

SELECT S.STUDENT_NAME AS 학생이름, G.TERM_NO AS 수강학기
FROM TB_GRADE G INNER JOIN TB_STUDENT S ON G.STUDENT_NO = s.STUDENT_NO 
INNER JOIN TB_CLASS C ON G.CLASS_NO = C.CLASS_NO
WHERE C.CLASS_NAME = '인간관계론' AND G.TERM_NO LIKE '2007%'


--13번 문제 —
--예체능 계열 과목 중 과목 담당교수를 
--한 명도 배정받지 못한 과목
--과목 이름, 학과 이름



SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_CLASS C
JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE C.DEPARTMENT_NO IN (SELECT DEPARTMENT_NO
						FROM TB_DEPARTMENT
						WHERE CATEGORY = '예체능')
AND C.CLASS_NO NOT IN (SELECT CLASS_NO
					FROM TB_CLASS_PROFESSOR)


--14번 문제 — 확인 필요
--서반아어학과 학생들이 지도교수를 게시하고자 한다.
--학생 이름, 지도 교수 이름을 비교하여
--만일 지도교수가 없는 학생일 경우 “지도교수 미지정” 으로 표시하라


SELECT S.STUDENT_NAME AS "학생 이름", DECODE(S.COACH_PROFESSOR_NO,NULL,'지도교수 미지정',S.COACH_PROFESSOR_NO) AS "지도교수"
FROM TB_DEPARTMENT D
INNER JOIN TB_STUDENT S ON D.DEPARTMENT_NO = S.DEPARTMENT_NO
WHERE D.DEPARTMENT_NAME = '서반아어학과'



--15번 문제 - HAVING 결과 확인 필요
--휴학생이 아닌 학생 중
--평점이 4.0 이상인 학생
--학번, 이름, 학과 이름, 평점

SELECT S.STUDENT_NO AS 학번, S.STUDENT_NAME AS 이름, D.DEPARTMENT_NAME AS "학과 이름", AVG(G.POINT) AS 평점
FROM TB_STUDENT S 
INNER JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO 
INNER JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE S.ABSENCE_YN != 'Y'
GROUP BY S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME
HAVING AVG(G.POINT) >= 4.0



--16번 문제 — 몬가 정신없을 때 풀었는데, 과연

--환경조경학과 전공과목들의 과목 별 평점

SELECT C.CLASS_NO, C.CLASS_NAME, AVG(POINT)
FROM TB_DEPARTMENT D 
INNER JOIN TB_CLASS C ON D.DEPARTMENT_NO = C.DEPARTMENT_NO
INNER JOIN TB_GRADE G ON C.CLASS_NO = G.CLASS_NO
WHERE D.DEPARTMENT_NAME = '환경조경학과' AND C.CLASS_TYPE LIKE '전공%'
GROUP BY C.CLASS_NO, C.CLASS_NAME,C.CLASS_TYPE


--17번 문제

--최경희 학생과 같은 과 학생
--이름, 주소

SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
						FROM TB_STUDENT
						WHERE STUDENT_NAME = '최경희')


--18번 문제 - 이거 맞는지 모르겠지만 일단 고
--국어국문학과에서
--총평점이 가장 높은 학생
--이름, 학번

SELECT SS.STUDENT_NO, SS.STUDENT_NAME
FROM TB_STUDENT SS
JOIN TB_GRADE GG ON SS.STUDENT_NO = GG.STUDENT_NO
WHERE SS.DEPARTMENT_NO = (SELECT DEPARTMENT_NO
							FROM TB_DEPARTMENT
							WHERE DEPARTMENT_NAME = '국어국문학과')
GROUP BY SS.STUDENT_NO, SS.STUDENT_NAME
HAVING AVG(GG.POINT) = (SELECT MAX(AVG(G.POINT))
						FROM TB_STUDENT S
						JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
						WHERE S.DEPARTMENT_NO = (SELECT DEPARTMENT_NO
												FROM TB_DEPARTMENT
												WHERE DEPARTMENT_NAME = '국어국문학과')
						GROUP BY S.STUDENT_NO,S.DEPARTMENT_NO)

							
					


--19번 문제
--환경조경학과가 속한 같은 계열 학과
--학과 별 전공과목 평점 파악


SELECT D.DEPARTMENT_NAME AS "계열 학과명", ROUND(AVG(G.POINT),1) AS "전공평점"
FROM TB_DEPARTMENT D
JOIN TB_CLASS C ON D.DEPARTMENT_NO = C.DEPARTMENT_NO
JOIN TB_GRADE G ON C.CLASS_NO = G.CLASS_NO
WHERE D.CATEGORY = (SELECT CATEGORY
					FROM TB_DEPARTMENT
					WHERE DEPARTMENT_NAME = '환경조경학과')
AND C.CLASS_TYPE LIKE '전공%'
GROUP BY D.DEPARTMENT_NAME




--DDL 

--1번 문제

CREATE TABLE TB_CATEGORY(
NAME VARCHAR2(10),
USE_YN CHAR(1) DEFAULT('Y'));


--2번 문제 — 기본키 설정 이거 맞나?
CREATE TABLE TB_CLASS_TYPE(
NO VARCHAR2(5),
NAME VARCHAR2(10)
CONSTRAINT TB_CLASS_TYPE_PK PRIMARY KEY(NO)
);


--3번 문제 - 기본키 이름 생략가능한가??
ALTER TABLE CATAGORY
ADD CONSTRAINT CATEGORY_KEY PRIMARY KEY(NAME)




--4번 문제

ALTER TABLE TB_CLASS_TYPE
MODIFY(NAME VARCHAR2(10) CONSTRAINT TB_CLASS_TYPE_NN NOT NULL)

--5번 문제











